# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-30 16:33
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iban', models.CharField(max_length=34, verbose_name='iban')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ExpectedTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('from_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('to_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('repeat_after_months', models.IntegerField(blank=True, null=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='banking.Account')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='banking.Category')),
                ('counter_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='counter_expected_transactions', to='banking.Account')),
            ],
        ),
        migrations.CreateModel(
            name='Flow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='banking.Category')),
            ],
        ),
        migrations.CreateModel(
            name='InterestPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annual_percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('receipt', models.ImageField(upload_to='')),
                ('outgoing', models.ManyToManyField(blank=True, to='banking.Flow')),
                ('payment', models.ManyToManyField(blank=True, related_name='repaid_loans', to='banking.Flow')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateField()),
                ('counter_name', models.CharField(max_length=70)),
                ('account_currency', models.CharField(max_length=3)),
                ('balance_before', models.DecimalField(decimal_places=2, max_digits=12)),
                ('mutation_currency', models.CharField(max_length=3)),
                ('mutation_value', models.DecimalField(decimal_places=2, max_digits=12)),
                ('journal_date', models.DateField()),
                ('value_date', models.DateField()),
                ('internal_code', models.IntegerField()),
                ('global_code', models.CharField(choices=[('ACC', 'Acceptgirobetaling'), ('AF', 'Afboeking'), ('AFB', 'Afbetalen'), ('BEA', 'Betaalautomaat'), ('BIJ', 'Bijboeking'), ('BTL', 'Buitenlandse Overboeking'), ('CHP', 'Chipknip'), ('CHQ', 'Cheque'), ('COR', 'Correctie'), ('DIV', 'Diversen'), ('EFF', 'Effectenboeking'), ('ETC', 'Euro traveller cheques'), ('GBK', 'GiroBetaalkaart'), ('GEA', 'Geldautomaat'), ('INC', 'Incasso'), ('IDB', 'iDEAL betaling'), ('IMB', 'iDEAL betaling via mobiel'), ('IOB', 'Interne Overboeking'), ('KAS', 'Kas post'), ('KTN', 'Kosten/provisies'), ('KST', 'Kosten/provisies'), ('OVB', 'Overboeking'), ('PRM', 'Premies'), ('PRV', 'Provisies'), ('RNT', 'Rente'), ('STO', 'Storno'), ('TEL', 'Telefonische Overboeking'), ('VV', 'Vreemde valuta')], max_length=3)),
                ('sequence_number', models.IntegerField()),
                ('reference', models.CharField(max_length=16)),
                ('description', models.CharField(max_length=140)),
                ('statement_number', models.IntegerField()),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='banking.Account')),
                ('counter_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counter_transactions', to='banking.Account')),
            ],
        ),
        migrations.AddField(
            model_name='interestperiod',
            name='loan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='banking.Loan'),
        ),
        migrations.AddField(
            model_name='flow',
            name='transaction',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='banking.Transaction'),
        ),
        migrations.AddField(
            model_name='expectedtransaction',
            name='flows',
            field=models.ManyToManyField(blank=True, to='banking.Flow'),
        ),
        migrations.AlterUniqueTogether(
            name='transaction',
            unique_together=set([('sequence_number', 'journal_date')]),
        ),
    ]
